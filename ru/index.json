
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Я, Батова Ирина, студентка Российского университета дружбы народов, факультета физико-математических и естественных наук, направления “Математика и механика”. Помимо математики, также интересуюсь литературой и искусством.\n","date":1684676774,"expirydate":-62135596800,"kind":"term","lang":"ru","lastmod":1684676774,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Я, Батова Ирина, студентка Российского университета дружбы народов, факультета физико-математических и естественных наук, направления “Математика и механика”. Помимо математики, также интересуюсь литературой и искусством.","tags":null,"title":"Ирина Батова","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/ru/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"Прошедшая неделя была обычной. Приближается сессия, поэтому много учебы.\n","date":1684676774,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1684676774,"objectID":"e9dbc8a770a01a3c7a86a090c1b9af65","permalink":"https://example.com/ru/post/lastweek5/","publishdate":"2023-05-21T16:46:14+03:00","relpermalink":"/ru/post/lastweek5/","section":"post","summary":"Прошедшая неделя была обычной. Приближается сессия, поэтому много учебы.","tags":["Academic"],"title":"Неделя с 15.05 по 21.05","type":"post"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"Шифрование – это преобразование информации в целях ее сокрытия от неавторизованных лиц. Именно с помощью шифрования обеспечиваются три состояния безопасности информации: конфиденциальность, целостность и идентифицируемость. В любом алгоритме шифрования важен ключ – он утверждает выбор конкретного преобразования. Ключ шифрования – набор цифр и букв, используемый алгоритмом для шифрования и расшифровки информации. При этом надежность ключа зависит от его длины в битах.\nШифрование бывает симметричным и ассиметричным. Симметричное шифрования использует один и тот же ключ и для шифрования, и для расшифровывания. А при ассиметричном шифровании (шифровании с открытым ключом) ключи шифрования и расшифровывания – разные, что делает этот вариант более надежным.\n","date":1684663754,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1684663754,"objectID":"18cf7a0d3e246c6842ffecf2321f584a","permalink":"https://example.com/ru/post/shifr/","publishdate":"2023-05-21T13:09:14+03:00","relpermalink":"/ru/post/shifr/","section":"post","summary":"Шифрование – это преобразование информации в целях ее сокрытия от неавторизованных лиц. Именно с помощью шифрования обеспечиваются три состояния безопасности информации: конфиденциальность, целостность и идентифицируемость. В любом алгоритме шифрования важен ключ – он утверждает выбор конкретного преобразования.","tags":["Academic"],"title":"Шифрование","type":"post"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"Как известно, в мире множество языков научного программирования. В этом посте немного поговорим о самых известных и используемых языках в разных сферах науки.\nК одному из важных языков относится Bash - обновленная оболочка Unix, впервые выпущенная в конце 80-х годов. На Bash обычно пишутся сценарии конфигурации сервера. Области применения: администрирование сервера, инструменты интерфейса командной строки, DevOps, виртуализация.\nК одному из старейших, но используемых до сиз пор языков, относится COBOL. Он был создан Грейс Хоппер в конце 1950-х годов и предназначался для стандартизации разработки крупномасштабных бизнес-приложений на компьютерах. Через системы COBOL проходят невероятные 95% транзакций ATM, причем многие из этих устройств работают круглосуточно 365 дней в году. Области применения: банковское дело/финансы, международные корпорации, правительства.\nСамыми мощными и быстродействующими языками считаются C/C++. C был создан в начале 1970-х годов Деннисом Ритчи, C ++ в 1985 году разработал Бьёрн Страуструп. C и C++ хорошо подходят для требовательных приложений, которым важны низкоуровневый доступ к оборудованию и производительность. Область применения: разработка ОС/SDK, встроенные устройства, игровые движки, наука.\nDart - достаточно современный язык программирования, разработанный в Google для создания мобильных, десктопных, веб-и серверных приложений. Dart предоставляет обширный набор функций, подходящих для определения сложных взаимодействий, асинхронных операций, анимации и других задач. Области применения: кроссплатформенные приложения, облачные сервисы/корпоративные системы, игры, графика.\nFortran был создан в 1950-х годах Джоном Бакусом, для проведения научных и инженерных работ. Области применения: аэрокосмическая/оборонная промышленность, научные вычисления, численный анализ.\nJavaScript был разработан Брэндоном Айхом в 90-х годах, чтобы добавлять выполнение скриптов на сайты. Сегодня это универсальный язык веб-интерфейса с мощными стандартизированными функциями, которые поддерживаются всеми основными браузерами. Области применения: фулстэк-разработка, облачные сервисы/контейнерное хранение, игры, утилиты.\nНельзя не упомянуть Python - один из самых известных языков даже не в круг программистов. Этот язык хорошо зарекомендовал себя и останется одним из наиболее востребованных инструментов в течение долгого времени. Области применения: искусственный интеллект/машинное обучение, интеллектуальная обработка данных, облачные сервисы/веб, медиа, скрипты.\nПоследний язык, который я хотела бы затронуть - SQL. Этот язык относится к универсальным языкам программирования и является мощным предметно-ориентированным языком для управления реляционными базами данных. Расширенные навыки позволяют разработчику создавать чрезвычайно безопасные и надежные правила предметной области, не зависящие от языка программирования или используемого SDK. Высокопрофильные реализации включают в себя Microsoft SQL Server, Oracle Database и PostgreSQL. Каждая из них обладает уникальным расширением языка SQL и предлагает новые функции, выходящие за рамки базовой спецификации SQL. Области применения: работа с реляционными данными, встраивание данных в приложения.\n","date":1683281361,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1683281361,"objectID":"f151d082af6a952a45a269901154c184","permalink":"https://example.com/ru/post/languages/","publishdate":"2023-05-05T13:09:21+03:00","relpermalink":"/ru/post/languages/","section":"post","summary":"Как известно, в мире множество языков научного программирования. В этом посте немного поговорим о самых известных и используемых языках в разных сферах науки.\nК одному из важных языков относится Bash - обновленная оболочка Unix, впервые выпущенная в конце 80-х годов.","tags":["Academic"],"title":"Языки научного программирования","type":"post"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"На этой неделе, в связи с приближением сессии, было много учебы и работы. Я продолжила работать над сайтом, выполнила предпоследнюю лабораторную работу.\n","date":1683281301,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1683281301,"objectID":"0eb5748af843b81c4aa5883c537ac912","permalink":"https://example.com/ru/post/lastweek4/","publishdate":"2023-05-05T13:08:21+03:00","relpermalink":"/ru/post/lastweek4/","section":"post","summary":"На этой неделе, в связи с приближением сессии, было много учебы и работы. Я продолжила работать над сайтом, выполнила предпоследнюю лабораторную работу.","tags":["Academic"],"title":"Неделя с 01.05 по 07.05","type":"post"},{"authors":null,"categories":null,"content":"При шифровании с открытым ключом каждым из собеседников создается пара ключей – открытый ключ и закрытый ключ. Эти ключи связаны друг с другом, поэтому расшифровать сообщения, зашифрованное с помощью открытого ключа, можно только с помощью соответствующего закрытого ключа. Важным моментом является то, что при создании ключей возможна генерация очень больших чисел таким образом, что при знании открытого ключа нельзя вычислить закрытый ключ никаким образом. Таким образом, обеспечивание надежного шифрования сообщений базируется на знании закрытого ключа исключительно его владельцем. В основе идеи ассиметричного шифрования лежит сложный математический вопрос, позволяющий строить односторонние функции. По известному х легко определяется функция y = f(x). Но при этом по известному значению y очень сложно вычислить х. В качестве открытого ключа используется y, а в качестве закрытого x. Для всех методов шифрования с открытым ключом математически строго не доказано отсутствие других методов вычисление закрытого ключа методом перебора. Криптосистемы с открытыми ключами различаются видом односторонних функций.\nПри необходимости передачи информации от собеседника к собеседнику действует единая схема реализации ассиметричного шифрования. Для начала первый собеседник выбирает алгоритм и пару открытого и закрытого ключей. Открытый ключ посылается второму собеседнику по открытому, незащищенному каналу. После этого второй собеседник шифрует информацию с помощью присланного открытого ключа и передает полученный шифр обратно первому собеседнику, который расшифровывает сообщение с помощью созданного в начале закрытого ключа. При этом, если необходимо наладить канал связи в обе стороны, то операции до расшифровки сообщений делают оба собеседника. Таким образом, каждый будет знать свои закрытый, открытый ключи и открытый ключ собеседника.\nТаким образом, если обозначить через EA открытый ключ собеседника А, через DA закрытый ключ собеседника А, то v=EA(u) – это результат зашифрования сообщения u, а u=DA(v) – результат расшифровки сообщения v. При этом преобразования должны быть такими, что для любого u выполняется равенство DA(EA(u))=u.\nКриптография с открытым ключом используется как самостоятельное средство защиты информации, так и как средство распределения ключей, и как средство аутентификации пользователей. Однако, как и у любой системы, у этого способа шифрования есть свои преимущества и недостатки относительно симметричного шифрования.\nК преимуществам можно отнести отсутствие необходимости передачи секретного ключа по надежному каналу и знание ключа расшифровки только одним из собеседников. Кроме того, в больших сетях число ключей будет значительно меньше, чем в симметричной системе. К недостаткам же можно отнести сложность внесения изменений в алгоритм, более длинные ключи, более медленный процесс шифровки и расшифровки сообщения и необходимость бОльших вычислительных ресурсов для использования.\nРазберем несколько самых известных систем, основанных на шифровании с помощью открытого ключа.\nВ 1977 учеными Массачусетского технологического института был разработан алгоритм шифрования RSA, основанный на проблеме разложения на множители (задача факторизации). Эта система была названа RSA по первым буквам фамилий ученых и стала первым алгоритмом, пригодным и для шифрования, и для цифровой подписи. В данном алгоритме выбираются простые числа p и q, которые держатся в секрете, а публикуется только их произведение N=p*q и ключ зашифровывания (открытый ключ). Закрытый ключ, то есть ключ расшифровки, секретен и вырабатывается с помощью знания факторизации чисел N (то есть знания p и q).\nСистема Эль-Гамаля основана на сложности вычисления дискретных логарифмов в конечных полях. Включает в себя алгоритм шифрования и алгоритм цифровой подписи. Схема была предложена Тахером Эль-Гамалем в 1984 году. Фактически, он разработал один из вариантов алгоритма Диффи-Хеллмана.: усовершенствовал систему и получил два алгоритма, которые использовались для шифрования и для обеспечения аутентификации. Но алгоритм Эль-Гамаля не был запатентован и, поэтому, стал более дешевой альтернативой, так как не требовалась оплата взносов за лицензию. Считается, что алгоритм попадает под действие патента Диффи-Хеллмана.\nСистема Мак-Элиса основана на теории алгебраического кодирования (декодирование полных линейных кодов) и была первой схемой, использующая рандомизацию в процессе шифрования. Разработана Робертом Мак-Элисом в 1978 году. Для закрытого ключа выбирается двоичный код Гоппа исправляющий ошибки, для которого известен эффективный алгоритм декодирования (алгоритм Петерсона). Открытый же ключ получается с помощью маскировки выбранного кода как полного линейного.\nВ заключение хочу сказать, что ассиметричное шифрование является более надежным, чем симметричное. Криптографические системы с открытым ключом в настоящее время широко применяются в различных сетевых протоколах, в частности, в протоколах TLS и его предшественнике SSL (лежащих в основе HTTPS), в SSH. …","date":1683244800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1683244800,"objectID":"dc5da97d0bb2b42e0d35f89a5f40b09d","permalink":"https://example.com/ru/project/cripts/","publishdate":"2023-05-05T00:00:00Z","relpermalink":"/ru/project/cripts/","section":"project","summary":"Методы криптования на основе открытого ключа - схема реализации, преимущества и недостатки, самые известные системы","tags":["Deep Learning"],"title":"Ассиметричное шифрованиe","type":"project"},{"authors":null,"categories":null,"content":"Для связи с периферийными устройствами к шине компьютера подключены одна или несколько микросхем контроллера ввода-вывода. Основная функция порта – выступать в качестве точки подключения, в которую подключают кабель от периферийного устройства, и обеспечить передачу данных от одного устройства к другому. Обычно именно сам конец разъема, находящегося на материнской плате, называют портом. В любом компьютере обязательно есть минимальный набор портов, без которых функционирование невозможно – это порты для подключения монитора, мыши, клавиатуры, разъем для сетевого подключения, универсальный USB порт и аудиоразъем звуковой платы. При необходимости количество компьютерных портов можно увеличить с помощью плат расширения, подключаемых к основной плате.\nПорты можно разделить на два типа – последовательные и параллельные. Делят их в зависимости от типа, используемого для связи.\nПоследовательные порты (также называется СОМ-портом) – это порты, через которые периферийные устройства подключаются с использованием последовательного протокола. Другими словами, информация через них передается по одному биту, бит за битом. Название «последовательный порт» закрепилось за портом, имеющим стандарт RS-232С, поэтому, хотя другие интерфейсы (например, USB) также используют последовательный способ обмена, их не относят к последовательным портам. Последовательные разъемы обычно имеют от 9 до 25 контактов, а персональный компьютер обычно имеет от одного до четырех последовательных портов. Последовательные порты, как правило, встраиваются в материнскую плату.\nОсобенностью последовательных портов по сравнению с другими «последовательными» технологиями (например, USB или Ethernet) является присутствие временных требований только между битами одного байта (скорость передачи это и есть временная пауза между ними). Какие-либо временные требования между 2 байтами отсутствуют.\nИзначально последовательный порт использовался для подключения терминала, позже стал использоваться для модема и мыши. Сейчас последовательные порты используется редко, так как они непригодны для развлекательных и офисных задач. Однако они незаменимы для прикладных задач, поэтому в основном они используются для соединения с источниками бесперебойного питания, для связи с аппаратными средствами разработки встраиваемых вычислительных систем, спутниковыми ресиверами, а также с приборами систем безопасности объектов.\nПараллельные порты – это порты, через которые связь между компьютером и его периферийным устройством осуществляется параллельно. То есть передача данных осуществляется одновременно по нескольким линиям или проводам связи. Иногда параллельный порт называют принтерным или портом Centronics. Параллельные порты часто идентифицируются в компьютерной системе «LPT1» и «LPT2» и также, как и последовательные, встраиваются в материнскую плату.\nНа персональных компьютерах параллельные порты могут использоваться для отправки 8 бит одновременно по 8 проводам. Параллельные порты позволяют согласовывать низкую скорость работы внешнего устройства и высокую скорость работы системной шины микропроцессора.\nДо появления USB параллельный порт был адаптирован к большому числу периферийных устройств. Первым таким устройством были электронные ключи, использовавшиеся для защиты программного обеспечения от копирования. Вскоре его начали применять и с другими устройствами – магнитные диски, сканеры, модемы, звуковые карты и так далее.\nПервые двунаправленные порты имели скорость 2,4 Мб/с. Однако для достижения более высоких скоростей были разработаны расширенные параллельные порты: РПП (расширенный параллельный порт) и ПРВ (порт с расширенными возможностями). РПП достигает скорости от 8 до 16 Мб/с. ПРВ имеет те же характеристики, что и РПП, но с дополнительной возможностью автоматического конфигурирования (позволяет компьютеру распознавать подключенные периферийные устройства).\nСейчас USB заменил параллельный порт принтера. Многие производители персональных компьютеров и ноутбуков рассматривают параллельный порт как устаревшее наследие прошлого и больше не поддерживают параллельный порт. Например, для принтеров разработаны и доступны адаптеры «USB - параллельный порт», которые позволяют подключать принтеры с параллельным интерфейсом к USB портам.\n","date":1683244800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1683244800,"objectID":"64bc2aeaff286bcc757da67b064d9191","permalink":"https://example.com/ru/project/ports/","publishdate":"2023-05-05T00:00:00Z","relpermalink":"/ru/project/ports/","section":"project","summary":"Особенности использования компьютерных портов - точки соединения между компьютером и периферийными устройствами","tags":["Deep Learning"],"title":"Параллельные и последовательные порты","type":"project"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"Для оформления отчета я использую язык разметки Markdown. В начала файла всегда указывается номер лабораторной работы, по которой делается отчет, дисциплина и ФИО студента, выполнившего работу. Ниже указывается цель работы, затем поэтапно описывается каждый этап работы со скриншотами, на каждый скриншот указывается ссылка. В конце работы располагается вывод, согласованный с темой работы, а также ответы на контрольные вопросы.\nДля создания заголовков используется знак “#”. Помимо этого, можно форматировать текст - для задания полужирного начертания нужно с двух сторон от текст поставить двойные звездочки, для курсивного начертания - одинарные. Для создания неупорядоченных списков используются звездочки или тире (есть возможность вложить один список в другой), для цитирования символ \u0026gt;.\nДля генерации файла из md в формат pdf и docs, я использую Pandoc.\n","date":1682330954,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1682330954,"objectID":"291d86d3330cd431190d835ae996a677","permalink":"https://example.com/ru/post/reportcreate/","publishdate":"2023-04-24T13:09:14+03:00","relpermalink":"/ru/post/reportcreate/","section":"post","summary":"Для оформления отчета я использую язык разметки Markdown. В начала файла всегда указывается номер лабораторной работы, по которой делается отчет, дисциплина и ФИО студента, выполнившего работу. Ниже указывается цель работы, затем поэтапно описывается каждый этап работы со скриншотами, на каждый скриншот указывается ссылка.","tags":["Academic"],"title":"Оформление отчёта","type":"post"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"За прошедшую неделю я написала контрольную по математическому анализу, выполнила 12 лабораторная работу и продолжила развитие своего сайта.\n","date":1682330894,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1682330894,"objectID":"7679dc8496a97e10a8c3e6e461f6221b","permalink":"https://example.com/ru/post/lastweek3/","publishdate":"2023-04-24T13:08:14+03:00","relpermalink":"/ru/post/lastweek3/","section":"post","summary":"За прошедшую неделю я написала контрольную по математическому анализу, выполнила 12 лабораторная работу и продолжила развитие своего сайта.","tags":["Academic"],"title":"Неделя с 24.04 по 30.04","type":"post"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"Markdown — язык разметки, используемый для создания форматированного текста с помощью текстового редактора. Его можно открывать и изменять в любом редакторе текста. Широко используется для написания документаций и README-файлов.\nМаркдаун создал писатель и блогер Джон Грубер вместе с веб-активистом Аароном Шварцем. Они хотели придумать максимально простой и удобный язык разметки, с помощью которого текст можно перевести в красиво оформленный вид. При этом текст обязан оставаться читаемым даже без приведения к «красивому» виду. Таким и оказался Markdown. Его создали в 2004 году, но наибольшую популярность язык получил сейчас. Его поддерживают разнообразные платформы для блогов, сервисы создания заметок, CMS и даже мессенджеры.\nMarkdown содержит базовые элементы, которые можно найти почти в любом README.md:\n заголовок первого уровня для названия; выделение жирным шрифтом важных частей в описании; ссылка с понятным текстом; заголовок второго уровня для подпунктов; маркированный список для перечисления преимуществ.  В целом, Markdown используется для быстрого форматирования статьи для перевода в PDF, верстки текстового документа для размещения на сайте, но без применения HTML, написания документации для кода, составления заметок в личном цифровом блокноте.\n","date":1680788894,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1680788894,"objectID":"bd238f54b82fdcd586f8f7e438599565","permalink":"https://example.com/ru/post/markdown/","publishdate":"2023-04-06T16:48:14+03:00","relpermalink":"/ru/post/markdown/","section":"post","summary":"Markdown — язык разметки, используемый для создания форматированного текста с помощью текстового редактора. Его можно открывать и изменять в любом редакторе текста. Широко используется для написания документаций и README-файлов.\nМаркдаун создал писатель и блогер Джон Грубер вместе с веб-активистом Аароном Шварцем.","tags":["Academic"],"title":"Язык разметки Markdown","type":"post"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"На прошедшей неделе я написала контрольную по математической логике, а также выполняла лабораторную работу по предмету “Операционные системы” на тему “Текстовый редактор emacs”. Помимо этого, наконец получилось запланировать поездку на лето к друзьям за границу, уже купили билеты.\n","date":1680788774,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1680788774,"objectID":"5b210a60f2d20a07c719c771061702bc","permalink":"https://example.com/ru/post/lastweek2/","publishdate":"2023-04-06T16:46:14+03:00","relpermalink":"/ru/post/lastweek2/","section":"post","summary":"На прошедшей неделе я написала контрольную по математической логике, а также выполняла лабораторную работу по предмету “Операционные системы” на тему “Текстовый редактор emacs”. Помимо этого, наконец получилось запланировать поездку на лето к друзьям за границу, уже купили билеты.","tags":["Academic"],"title":"Неделя с 3.04 по 9.04","type":"post"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"В контексте современных методов разработки и DevOps часто используются аббревиатуры CI и CD. CI означает непрерывную интеграцию, а CD - непрерывное развертывание (или непрерывную поставку).\nНепрерывная интеграция - это фундаментальная рекомендация DevOps, согласно которой разработчики должны регулярно проводить слияние изменений кода в центральном репозитории, где выполняются автоматизированные сборки и тесты. Разработчики, применяющие непрерывную интеграцию, при каждой возможности выполняют слияние своих изменений с основной веткой. Изменения, внесенные разработчиком, проверяются путем создания сборки и запуска автоматических тестов на этой сборке. При использовании непрерывной интеграции уделяется большое внимание автоматизации тестирования, в результате которого при интеграции новых коммитов в основную ветку работа приложения не нарушается.\nТакже есть непрерывная поставка - продолжение непрерывной интеграции, поскольку при ней происходит автоматическое развертывание всех изменений кода, то есть, автоматизирован не только процесс тестирования, но и процесс выпуска продукта. Непрерывное развертывание идет на один шаг дальше, чем непрерывная поставка - каждое изменение, которое проходит все стадии производственного конвейера, выпускается для клиентов. Вмешательство человека не требуется, и развертыванию нового изменения в рабочую среду может помешать только ошибка во время теста. Непрерывное развертывание применяется для ускорения цикла обратной связи с клиентами.\nТаким образом, непрерывная интеграция является частью как непрерывной поставки, так и непрерывного развертывания. А непрерывное развертывание похоже на непрерывную поставку, за исключением того, что релизы выполняются автоматически.\nОсновной минус использования непрерывной интеграции и непрерывного развертывания - придется писать автоматические тесты для каждой новой функции, улучшения или баг-фикса. Помимо этого, необходим сервер непрерывной интеграции, который может отслеживать основной репозиторий и автоматически запускать тесты для каждого нового отправленного коммита. Однако есть и неоценимые преимущества - в рабочую среду попадает меньше багов, из-за этого сборка релиза проходит гораздо легче, снижаются затраты на тестирование, ускоряется процесс разработки.\n","date":1679061031,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1679061031,"objectID":"9d2621d4be07faf4991fe2eaf2dfc110","permalink":"https://example.com/ru/post/cdci/","publishdate":"2023-03-17T16:50:31+03:00","relpermalink":"/ru/post/cdci/","section":"post","summary":"В контексте современных методов разработки и DevOps часто используются аббревиатуры CI и CD. CI означает непрерывную интеграцию, а CD - непрерывное развертывание (или непрерывную поставку).\nНепрерывная интеграция - это фундаментальная рекомендация DevOps, согласно которой разработчики должны регулярно проводить слияние изменений кода в центральном репозитории, где выполняются автоматизированные сборки и тесты.","tags":["Academic"],"title":"Непрерывная интеграция и непрерывное развертывание (СD/CI)","type":"post"},{"authors":["Ирина Батова"],"categories":["Demo"],"content":"Прошедшая неделя была абсолютно обычной. Прошли две контрольных - по линейной алгебре и по математическому анализу. Помимо этого, я выполняла лабораторную работу, домашнее задание по истории и немного работала в свободное время.\n","date":1679060774,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1679060774,"objectID":"e11d754bc04627982164569163f77789","permalink":"https://example.com/ru/post/lastweek/","publishdate":"2023-03-17T16:46:14+03:00","relpermalink":"/ru/post/lastweek/","section":"post","summary":"Прошедшая неделя была абсолютно обычной. Прошли две контрольных - по линейной алгебре и по математическому анализу. Помимо этого, я выполняла лабораторную работу, домашнее задание по истории и немного работала в свободное время.","tags":["Academic"],"title":"Неделя с 13.03 по 18.03","type":"post"},{"authors":["Ирина Батова"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/ru/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/ru/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/ru/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Ирина Батова","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/ru/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Ирина Батова","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://example.com/ru/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]